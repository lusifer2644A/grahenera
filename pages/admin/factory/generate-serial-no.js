import AdminNav from "@/components/AdminNav";
import TextInput from "@/components/inputs/TextInput";
import Loader from "@/components/Loader/Loader";
import axios from "axios";
import Head from "next/head";
import { useEffect, useState } from "react";
import Dropdown from "react-dropdown";
import "react-dropdown/style.css";
import { toast } from "react-toastify";
import styles from "./generate-serial-no.module.scss";

const home = () => {
  const [dropdownOptions, setDropdownOptions] = useState([]);
  const [selectedProduct, setSelectedProduct] = useState({});
  const [no_of_items, set_no_of_items] = useState(null);
  const [loading, setLoading] = useState(false);
  const [generatedSerialNos, setGeneratedSerialNos] = useState([]);

  useEffect(() => {
    setSelectedProduct(dropdownOptions[0]);
    fetchProducts();
  }, []);

  const fetchProducts = async () => {
    setLoading(true);
    try {
      const res = await axios.get("/api/allproducts");
      console.log(res);

      const data = res.data.data;
      const arr = [];

      for (let x of data) {
        arr.push({
          value: x,
          label: x.product_name,
        });
      }

      setDropdownOptions(arr);
    } catch (err) {
      console.log(err);
    }
    setLoading(false);
  };

  const onSelectProduct = (product) => {
    console.log(product);
    setSelectedProduct(product);
  };

  const handleChange = (e) => {
    set_no_of_items(e.target.value);
  };

  const generate_serial_no = (id) => {
    let date = new Date();

    let year = date.getFullYear();

    let month = date.getMonth() + 1;
    if (month < 10) {
      month = "0" + month.toString();
    }

    let day = date.getDate();
    if (day < 10) {
      day = "0" + day.toString();
    }

    let randNo = Math.floor(Math.random() * 100000);

    let newid =
      year + month + day + Math.floor(id / 100000).toString() + randNo;

    return newid;
  };

  const generateIds = () => {
    let arr = [];
    let date = new Date();
    date = Date.parse(date);

    for (let i = 0; i < no_of_items; i++) {
      const generated_serial_no = generate_serial_no(selectedProduct.value.id);

      arr.push({
        product_id: selectedProduct.value.id,
        serial_no: generated_serial_no,
        product_name: selectedProduct.label,
        date_added: date,
        date_expiry: date + selectedProduct.value.warrenty_tenure * 31556926000,
      });
    }

    setGeneratedSerialNos(arr);
  };

  console.log(generatedSerialNos);

  const SerialCard = ({ data }) => {
    return (
      <div className={styles.card}>
        <h3 className="subtitle">{data.serial_no}</h3>
        <p className="caption-text">
          {data.product_name} - {data.product_id}
        </p>
      </div>
    );
  };

  const savetodb = async () => {
    setLoading(true);
    try {
      const body = {
        data: generatedSerialNos,
        product_id: selectedProduct.value.id,
      };

      const res = await axios.post("/api/factory/setserials", body);
      console.log(res);
      toast.success("Pushed all serials to DB");
    } catch (err) {
      console.log(err);
    }
    setLoading(false);
  };

  return (
    <>
      <Head>
        <title>Graphene Pro - Factory</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/logo_sm.png" />
      </Head>
      <main className="main">
        <AdminNav />
        {loading && <Loader />}
        <div className={styles.container}>
          <div className={styles.productChooseContainer}>
            <p className="subtitle">Select Product</p>
            <p className="caption-text">
              Select product for which serial numbers need to be generated
            </p>
            <div className={styles.inputContainer}>
              <div className={styles.inputBox}>
                <Dropdown
                  options={dropdownOptions}
                  onChange={onSelectProduct}
                  value={selectedProduct}
                  placeholder="Select Product"
                  style={{ marginTop: "10rem" }}
                />
              </div>

              <div className={styles.inputBox}>
                <TextInput
                  id="outlined-name"
                  label="No. of items"
                  name="no_of_items"
                  fullWidth={true}
                  value={no_of_items}
                  onChange={handleChange}
                />
              </div>
            </div>

            <div className={styles.generatebutton}>
              <button className="normal-button" onClick={generateIds}>
                Generate
              </button>
            </div>
          </div>

          {/* Products */}
          <p className="subtitle mt-7">Generated Serial Numbers</p>
          <div className={styles.generatedIdsTabs}>
            {generatedSerialNos.map((g) => {
              return <SerialCard data={g} />;
            })}
          </div>

          {generatedSerialNos.length > 0 && (
            <div className={styles.generatebutton}>
              <button className="primary-button mt-5" onClick={savetodb}>
                Save to database
              </button>
            </div>
          )}
        </div>
      </main>
    </>
  );
};

export default home;
