import AdminNav from "@/components/AdminNav";
import TextInput from "@/components/inputs/TextInput";
import Loader from "@/components/Loader/Loader";
import ProtectedRoute from "@/components/route/ProtectedRoute";
import axios from "axios";
import Head from "next/head";
import { useEffect, useState } from "react";
import Dropdown from "react-dropdown";
import "react-dropdown/style.css";
import { toast } from "react-toastify";
import styles from "./vehicle-registration.module.scss";

const home = () => {
  const [dropdownOptions, setDropdownOptions] = useState([]);
  const [selectedProduct, setSelectedProduct] = useState({});
  const [vehicle_number, set_vehicle_number] = useState(null);
  const [show_service_form, set_show_service_form] = useState(false);
  const [vehicle_info_state, set_vehicle_info_state] = useState({
    services: [],
  });
  const [loading, setLoading] = useState(false);
  const [generatedSerialNos, setGeneratedSerialNos] = useState([]);

  // useEffect(() => {
  //   setSelectedProduct(dropdownOptions[0]);
  //   fetchProducts();
  // }, []);

  const fetchProducts = async () => {
    setLoading(true);
    try {
      const res = await axios.get("/api/allproducts");
      console.log(res);

      const data = res.data.data;
      const arr = [];

      for (let x of data) {
        arr.push({
          value: x,
          label: x.product_name,
        });
      }

      setDropdownOptions(arr);
    } catch (err) {
      console.log(err);
    }
    setLoading(false);
  };

  const onSelectProduct = (product) => {
    console.log(product);
    setSelectedProduct(product);
  };

  const handleChange = (e) => {
    set_vehicle_number(e.target.value);
  };

  const generate_serial_no = (id) => {
    let date = new Date();

    let year = date.getFullYear();

    let month = date.getMonth() + 1;
    if (month < 10) {
      month = "0" + month.toString();
    }

    let day = date.getDate();
    if (day < 10) {
      day = "0" + day.toString();
    }

    let randNo = Math.floor(Math.random() * 100000);

    let newid =
      year + month + day + Math.floor(id / 100000).toString() + randNo;

    return newid;
  };

  const getVehicleInfoHandler = async () => {
    try {
      const res = await axios.post("/api/factory/getVehicleInfo", {
        vehicle_number: vehicle_number,
      });
      console.log(res);
      set_vehicle_info_state(res.data);
    } catch (err) {
      console.log("Error while getting vehicle info", err);
    }
  };

  console.log(vehicle_info_state);

  const showForm = async () => {
    setLoading(true);
    try {
      const res = await axios.get("/api/allproducts");
      console.log(res);

      const data = res.data.data;
      const arr = [];

      for (let x of data) {
        arr.push({
          value: x,
          label: x.product_name,
        });
      }

      setDropdownOptions(arr);
    } catch (err) {
      console.log(err);
    }
    setLoading(false);
    set_show_service_form(true);
  };

  console.log(generatedSerialNos);

  const SerialCard = ({ data }) => {
    return (
      <div className={styles.card}>
        <h3 className="subtitle">{data.serial_no}</h3>
        <p className="caption-text">
          {data.product_name} - {data.product_id}
        </p>
      </div>
    );
  };

  const registerService = async () => {
    setLoading(true);
    try {
      const body = {
        vehicle_number: vehicle_number,
        product_id: selectedProduct.value.id,
      };

      const res = await axios.post("/api/factory/registerService", body);
      console.log(res);
      toast.success("Registered Service", res.data.service_id);
      getVehicleInfoHandler();
    } catch (err) {
      console.log(err);
    }
    setLoading(false);
  };

  return (
    <>
      <Head>
        <title>Graphene Pro - Factory</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/logo_sm.png" />
      </Head>
      <main className="main">
        <AdminNav />
        {loading && <Loader />}
        <div className={styles.container}>
          <div className={styles.productChooseContainer}>
            <p className="subtitle">Enter Vehicle Number</p>
            <p className="caption-text">
              Enter vehicle number for getting product info used
            </p>
            <div className={styles.inputContainer}>
              {/* <div className={styles.inputBox}>
                <Dropdown
                  options={dropdownOptions}
                  onChange={onSelectProduct}
                  value={selectedProduct}
                  placeholder="Select Product"
                  style={{ marginTop: "10rem" }}
                />
              </div> */}

              <div className={styles.inputBox}>
                <TextInput
                  id="outlined-name"
                  label="Vehicle Number"
                  name="vehicle_number"
                  fullWidth={true}
                  value={vehicle_number}
                  onChange={handleChange}
                />
              </div>
            </div>

            <div className={styles.generatebutton}>
              <button className="normal-button" onClick={getVehicleInfoHandler}>
                Get Info
              </button>
            </div>
          </div>

          {/* Products */}
          {(vehicle_info_state?.status === 0 ||
            vehicle_info_state?.status === 1) && (
            <div>
              <p className="subtitle mt-7">New Service</p>
            </div>
          )}

          {vehicle_info_state?.status === 0 && show_service_form === false && (
            <div>
              <p className="subHeading mt-1" style={{ color: "red" }}>
                Vehicle Number not registered!
              </p>
            </div>
          )}

          {(vehicle_info_state?.status === 0 ||
            vehicle_info_state?.status === 1) &&
            show_service_form === false && (
              <div className={styles.generatebutton}>
                <button
                  className="normal-button mt-4"
                  onClick={() => showForm()}
                >
                  Register New Service
                </button>
              </div>
            )}

          {show_service_form && (
            <div className={styles.productChooseContainer}>
              <div className={styles.inputContainer}>
                <div className={styles.inputBox}>
                  <Dropdown
                    options={dropdownOptions}
                    onChange={onSelectProduct}
                    value={selectedProduct}
                    placeholder="Select Product"
                    style={{ marginTop: "10rem" }}
                  />
                </div>
                {/* <div className={styles.inputBox}>
                  <TextInput
                    id="outlined-name"
                    label="Vehicle Number"
                    name="vehicle_number"
                    fullWidth={true}
                    value={vehicle_number}
                    onChange={handleChange}
                  />
                </div> */}
              </div>
              <div className={styles.generatebutton}>
                <button
                  className="normal-button mt-2"
                  onClick={registerService}
                >
                  Register Service
                </button>
              </div>
            </div>
          )}
          <div>
            <p className="subtitle mt-7">Past Service Records</p>
            {vehicle_info_state.data?.services?.length === 0 && (
              <p className="body mt-2">No past records found</p>
            )}
            <div className={styles.vehicleRecordCardContainer}>
              {vehicle_info_state.data?.services?.map((item) => {
                let date_of_service_read = new Date(item.date_of_service);
                date_of_service_read =
                  date_of_service_read.toLocaleDateString();

                let next_service_date_read = new Date(item.next_service_date);
                next_service_date_read =
                  next_service_date_read.toLocaleDateString();

                return (
                  <div className={styles.vehicleRecordCard}>
                    <div className={styles.card_row}>
                      <span className="caption-text">Service Number: </span>
                      <span className="caption-text bold">
                        {item.service_no}
                      </span>
                    </div>
                    <div className={styles.card_row}>
                      <span className="caption-text">Service ID: </span>
                      <span className="caption-text bold">
                        {item.service_id}
                      </span>
                    </div>
                    <div className={styles.card_row}>
                      <span className="caption-text">Product ID: </span>
                      <span className="caption-text bold">
                        {item.product_id}
                      </span>
                    </div>
                    <div className={styles.card_row}>
                      <span className="caption-text">Vehicle Number: </span>
                      <span className="caption-text bold">
                        {item.vehicle_number.toUpperCase()}
                      </span>
                    </div>
                    <div className={styles.card_row}>
                      <span className="caption-text">Date of Service: </span>
                      <span className="caption-text bold">
                        {date_of_service_read}
                      </span>
                    </div>
                    <div className={styles.card_row}>
                      <span className="caption-text">Next Service Date: </span>
                      <span className="caption-text bold">
                        {next_service_date_read}
                      </span>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default home;
